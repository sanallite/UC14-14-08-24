1. Instalar a Biblioteca
Primeiro, você precisa instalar a biblioteca usando npm ou yarn:

sh
Copiar código
npm install @react-native-community/netinfo
ou

sh
Copiar código
yarn add @react-native-community/netinfo
2. Importar e Usar o NetInfo
Depois de instalar a biblioteca, você pode usá-la para verificar a conectividade com a internet. Aqui está um exemplo básico:

jsx
Copiar código
import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet } from 'react-native';
import NetInfo from '@react-native-community/netinfo';

const App = () => {
  const [isConnected, setIsConnected] = useState(false);

  useEffect(() => {
    // Função para lidar com as mudanças de conexão
    const handleConnectivityChange = (state) => {
      setIsConnected(state.isConnected);
    };

    // Inscreva-se nas mudanças de conexão
    const unsubscribe = NetInfo.addEventListener(handleConnectivityChange);

    // Verifique a conectividade inicial
    NetInfo.fetch().then((state) => {
      setIsConnected(state.isConnected);
    });

    // Limpeza quando o componente é desmontado
    return () => {
      unsubscribe();
    };
  }, []);

  return (
    <View style={styles.container}>
      <Text style={styles.text}>
        {isConnected ? 'Conectado à Internet' : 'Sem Conexão com a Internet'}
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  text: {
    fontSize: 18,
  },
});

export default App;



Explicação:

Instalação e Importação: Você começa instalando a biblioteca e a importando em seu arquivo React Native.

useEffect: O hook useEffect é utilizado para inscrever-se nas mudanças de conectividade e também para obter o estado inicial da conexão.

NetInfo.addEventListener: Adiciona um listener para mudanças no estado de conectividade.
NetInfo.fetch: Obtém o estado atual da conexão quando o componente é montado.

Limpeza: Certifique-se de limpar o listener quando o componente for desmontado para evitar vazamentos de memória.

Essa abordagem é eficaz para monitorar o estado da conexão com a internet e pode ser facilmente integrada ao seu aplicativo React Native.